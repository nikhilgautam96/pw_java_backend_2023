Inheritance :-
    . It describes an "is-a relationship" between classes.
        ie. "B is a child of A" or "A is a parent of B"
    . It is one of the pillars of Object oriented programming.
    . It promotes reusability.
    . productivity of the code is improved.
    . In java inheritance is achieved usig the "extends" keyword (to inherit classes) and
      using "implements" keyword (to inherit interfaces).
    . Whatever is there in the Parent class by default would be available to the 
      child class.
    . but the child class properties and behaviours are not available to the parent class.
    . Using the child reference we call both the parent and child class methods.
    . whereas using the parent reference we can call only Parent class methods.
    . the class that is being inherited is called - { Super class, Base class, Parent class }
    . the class that inherits is called - { Child class, sub class, derived class }

    eg :-
        class Parent{
            public void methodOne() {
                System.out.println("methodOne from parent");
            }
        }
        class Child extends Parent {
            public void methodTwo() {
                System.out.println("methodTwo from child");
            }
        }
        public class TestApp{
            public static void main(String... args) {
                Parent p=new Parent();
                p.methodOne();

                Child c=new Child();
                c.methodOne();
                c.methodTwo();
            }
        }
        OUTPUT
            methodOne from parent
            methodOne from parent
            methodTwo from child

Types of Inheritance :-
    1. Single - level Inheritance
        - eg :-
                class Human { //Super class // Base class// Parent class
                    int age;
                    void sleep() {
                        age=18;
                        System.out.println("Human needs good sleep");
                        System.out.println(age);
                    }
                }
                class Student extends Human { // Child class// sub class // derived class
                    
                }
                class Inheritance1 {
                    public static void main(String[] args) { 
                    Student st=new Student();
                    st.sleep();
                    }
                }
        - eg :-
                class Human1 {
                    private String name;
                    int age;
                    Human1() {
                        System.out.println("Human class Constructor");
                    }
                    void sleep() {
                        age=18;
                        System.out.println("Human needs good sleep");
                        System.out.println(age);
                    }
                }
                class Student1 extends Human1 {
                    // public Studemt1() {
                            // super();
                    // }
                    void disp() {
                        System.out.println(" The age is : " + age);
                        // System.out.println(" The Name is : " + name);
                    }
                }
                public class Inheritance2 {
                    public static void main(String[] args) {
                        Student1 st1 = new Student1();
                        st1.sleep();
                        st1.disp();
                    }
                }
    2. Multi level Inheritance :
        - 1 child inherits a parent which in-turn inherits another parent.
    3. Hierarchical Inheritance :
        - 1 parent class can have any number of child classes.
    4. Multiple Inheritance.
        - 1 child inherits 2 or more parents at a time.
        - extending 2 classes created a "Diamond Shaped Problem".
        - java does not support Multiple inheritance.
        - We use "Interface" to achieve multiple inheritance.
        Diamond Shaped Problem :
            . Since every class has "Object" as parent class by default, and suppose a child class
              inherits 2 classes and both has Object as parent.
              now the compiler gets confused that which class's method to call and this is 
              called as Ambiguity bcz Object class method comes top this child
              via both the parents.
            . Such situation is Diamond Shaped Problem.
    5. Hybrid Inheritance.
        - It is a combination of more than 2 types of inheritances, single and multiple.
        - This can also be achieved using "interfaces" only as multiple inheritance is
          not supported by java.
        - It is combination of single, multiple and heirarchical inheritances.

Types of Methods in Inheritance :-
    1. Inherited.
        - The method which would come from parent to child due to inheritance is called
          inherited method.

    2. Overriden.
        - The method that is taken from Parent and changes the implemetation as per the needs of 
          the requirement in the child class is called "Overriden Method".
        Overriden -
            . The method in parent that is being modified in child.
        Overriding -
            . The Child class method that is changing the implementation of parent class method.
        
    3. Specialized.
        - The methods that are specific to the particular or child class is specialised.
